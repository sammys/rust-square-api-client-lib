//! Model struct for OrderLineItemModifier type

use std::collections::HashMap;

use crate::{Hydrate, Reconcile};
use serde::{Deserialize, Serialize};

use super::Money;

/// A [CatalogModifier].
#[derive(Clone, Debug, Default, Deserialize, Eq, Hydrate, PartialEq, Reconcile, Serialize)]
pub struct OrderLineItemModifier {
    /// A unique ID that identifies the modifier only within this order.
    pub uid: Option<String>,
    /// The catalog object ID referencing [CatalogModifier].
    pub catalog_object_id: Option<String>,
    /// The version of the catalog object that this modifier references.
    pub catalog_version: Option<i64>,
    /// The name of the item modifier.
    pub name: Option<String>,
    /// The base price for the modifier.
    ///
    /// `base_price_money` is required for ad hoc modifiers. If both `catalog_object_id` and
    /// `base_price_money` are set, `base_price_money` will override the predefined
    /// [CatalogModifier] price.
    pub base_price_money: Option<Money>,
    /// **Read only** The total price of the item modifier for its line item. This is the modifier's
    /// base_price_money multiplied by the line item's quantity.
    pub total_price_money: Option<Money>,
    /// Application-defined data attached to this order. Metadata fields are intended to store
    /// descriptive references or associations with an entity in another system or store brief
    /// information about the object. Square does not process this field; it only stores and returns
    /// it in relevant API calls. Do not use metadata to store any sensitive information (such as
    /// personally identifiable information or card details).
    ///
    /// Keys written by applications must be 60 characters or less and must be in the character set
    /// `[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are
    /// prefixed with a namespace, separated from the key with a ':' character.
    ///
    /// Values have a maximum length of 255 characters.
    ///
    /// An application can have up to 10 entries per metadata field.
    ///
    /// Entries written by applications are private and can only be read or modified by the same
    /// application.
    ///
    /// For more information,
    /// see [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
    pub metadata: Option<HashMap<String, String>>,
}
